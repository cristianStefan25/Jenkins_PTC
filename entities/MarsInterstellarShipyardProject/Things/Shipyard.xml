<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b2013"
 majorVersion="8"
 minorVersion="4"
 modelPersistenceProviderPackage="H2PersistenceProviderPackage"
 revision="0"
 schemaVersion="1040"
 universal="password">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="TimerThing"
         enabled="true"
         homeMashup=""
         identifier=""
         lastModifiedDate="2019-10-10T12:31:14.076+03:00"
         name="Shipyard"
         projectName="MarsInterstellarShipyardProject"
         published="false"
         tags=""
         thingTemplate="Timer_Simple"
         valueStream="VS">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read>
                    <Principal
                     isPermitted="true"
                     name="TestUser"
                     type="User"></Principal>
                </Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="Rollup">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Power.Admin"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="GetPropertyValues">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Power.General"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="NoLowPowerStateUntil">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="Power.General"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="Power.Write"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke></ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="Power.General"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ShipyardAdminGrp"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="Power.General"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke></ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="LowPowerState">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="Power.General"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="Power.Write"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke></ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="MarsInterstellarShipyardOrg"
                     type="Organization"></Principal>
                    <Principal
                     isPermitted="true"
                     name="MarsInterstellarShipyardOrg:Power"
                     type="OrganizationalUnit"></Principal>
                    <Principal
                     isPermitted="true"
                     name="MarsInterstellarShipyardOrg:Shipyard"
                     type="OrganizationalUnit"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables>
                <ConfigurationTable
                 description="General Settings"
                 isMultiRow="false"
                 name="Settings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="true"
                             baseType="BOOLEAN"
                             description="Automatically enable timer on startup"
                             name="enabled"
                             ordinal="0"></FieldDefinition>
                            <FieldDefinition
                             baseType="USERNAME"
                             description="User context in which to run event handlers"
                             name="runAsUser"
                             ordinal="0"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="60000.0"
                             baseType="NUMBER"
                             description="Update rate"
                             name="updateRate"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <enabled>true</enabled>
                            <runAsUser>
                            <![CDATA[
                            Administrator
                            ]]>
                            </runAsUser>
                            <updateRate>10000.0</updateRate>
                        </Row>
                    </Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="BOOLEAN"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="LowPowerState"
                     ordinal="5"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="DATETIME"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="NoLowPowerStateUntil"
                     ordinal="6"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="PowerConsumed"
                     ordinal="2"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="PowerProduced"
                     ordinal="3"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.dataChangeThreshold="100.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="PowerStored"
                     ordinal="4"></PropertyDefinition>
                </PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="Rollup">
                        <ResultType
                         aspect.dataShape="RollupDS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="TestLongDelay">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions>
                    <EventDefinition
                     category=""
                     dataShape="LowPowerEmergencyDS"
                     description=""
                     name="LowPowerEmergency"></EventDefinition>
                </EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="Rollup">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /*********************************************************************
                                        Log the beginning of the service call
                                        *********************************************************************/
                                        logger.warn("Beginning Shipyard Rollup Service.");
                                        
                                        /*********************************************************************
                                        Using our GetPowerConsumers() service, get all power
                                        consumers and store them in an infoTable
                                        *********************************************************************/
                                        var sysServThingName = "PowerSystemServices";
                                        var powerConsumers = Things[sysServThingName].GetPowerConsumers();
                                        var totalPowerConsumed = 0;
                                        
                                        /*********************************************************************
                                        Iterate through the table one row at a time, adding to
                                        totalPowerConsumed with each row.  This code was derived
                                        from Snippets > Infotable for loop
                                        *********************************************************************/
                                        var tableLength = powerConsumers.rows.length;
                                        for (var x = 0; x < tableLength; x++) {
                                        	var row = powerConsumers.rows[x];
                                        	totalPowerConsumed = totalPowerConsumed + row.PowerConsumed;
                                        }
                                        
                                        //Set the Shipyard PowerConsumed property
                                        me.PowerConsumed = totalPowerConsumed;
                                        
                                        /*********************************************************************
                                        Using our GetPowerProducers() service, get all power
                                        consumers and store them in an infoTable
                                        *********************************************************************/
                                        var powerProducers = Things[sysServThingName].GetPowerProducers();
                                        
                                        /*********************************************************************
                                        Use the Aggregate function, available from
                                        Snippets > InfoTableFunctions > Aggregate
                                        to sum the column of the totalPowerProduced
                                        InfoTable.
                                        *********************************************************************/
                                        var params = {
                                        	t: powerProducers /* INFOTABLE */,
                                        	columns: "PowerProduced" /* STRING */,
                                        	aggregates: "SUM" /* STRING */,
                                        	groupByColumns: undefined /* STRING */
                                        };
                                        var resultTable = Resources["InfoTableFunctions"].Aggregate(params);
                                        var totalPowerProduced = resultTable.SUM_PowerProduced;
                                        
                                        //Set the Shipyard PowerProduced property
                                        me.PowerProduced = totalPowerProduced;
                                        
                                        /*********************************************************************
                                        Return info table of power produced/consumed/stored
                                        Used Snippets > Create Infotable from Datashape and Snippets > Create infotable
                                        entry from datashape as a basis for this code.
                                        *********************************************************************/
                                        params = {
                                        	infoTableName : "InfoTable",
                                        	dataShapeName : "RollupDS"
                                        };
                                        var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                        var newEntry = new Object();
                                        newEntry.powerConsumed = totalPowerConsumed; // NUMBER
                                        newEntry.powerProduced = totalPowerProduced; // NUMBER
                                        var powStorageThingname = "PowerStorage";
                                        newEntry.powerStored = Things[powStorageThingname].PowerStored; // NUMBER
                                        result.AddRow(newEntry);
                                        logger.warn("Shypyard Rollup: " + me.PowerConsumed + "C-" +
                                            me.PowerProduced + "P-" + me.PowerStored + "S");
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="TestLongDelay">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var result = "Fail";
                                        
                                        // pause():INTEGER
                                        var milliseconds = pause(59000);
                                        pause(3000);
                                        result = "Success";
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings>
                <PropertyBinding
                 name="PowerStored"
                 sourceName="PowerStored"
                 sourceThingName="PowerStorage"></PropertyBinding>
            </PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations>
                <AlertDefinitions
                 name="LowPowerState"></AlertDefinitions>
                <AlertDefinitions
                 name="NoLowPowerStateUntil"></AlertDefinitions>
                <AlertDefinitions
                 name="PowerConsumed"></AlertDefinitions>
                <AlertDefinitions
                 name="PowerProduced"></AlertDefinitions>
                <AlertDefinitions
                 name="PowerStored"></AlertDefinitions>
            </AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties>
                <PowerConsumed>
                    <Value>2005.0</Value>
                    <Timestamp>2019-06-27T17:04:31.865+03:00</Timestamp>
                    <Quality>GOOD</Quality>
                </PowerConsumed>
                <NoLowPowerStateUntil>
                    <Value>2019-04-05T14:52:46.865+03:00</Value>
                    <Timestamp>2019-04-05T14:52:46.866+03:00</Timestamp>
                    <Quality>GOOD</Quality>
                </NoLowPowerStateUntil>
                <PowerProduced>
                    <Value>150.0</Value>
                    <Timestamp>2019-06-27T17:04:31.874+03:00</Timestamp>
                    <Quality>GOOD</Quality>
                </PowerProduced>
                <LowPowerState>
                    <Value>true</Value>
                    <Timestamp>2019-04-11T13:00:05.357+03:00</Timestamp>
                    <Quality>GOOD</Quality>
                </LowPowerState>
            </ThingProperties>
        </Thing>
    </Things>
</Entities>
